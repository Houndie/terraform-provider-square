# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.16

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/Houndie/terraform-provider-square
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: 
          name: Install Linter
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.38.0
      - run: 
          name: Install terraform
          command: mkdir terraform && cd terraform && wget https://releases.hashicorp.com/terraform/0.15.0/terraform_0.15.0_linux_amd64.zip && unzip terraform_0.15.0_linux_amd64.zip && cd ..

      - run: 
          name: Build
          command: go build -v .
      - run: 
          name: Test
          command: PATH=terraform:$PATH TF_ACC=1 go test -v ./...
      - run: 
          name: Lint
          command: golangci-lint run
  release:
    docker:
      # specify the version
      - image: circleci/golang:1.16
    working_directory: /go/src/github.com/Houndie/terraform-provider-square
    steps:
      - run: 
          name: Install toolbox
          command: pushd $GOPATH && go get github.com/Houndie/toolbox@v0.4.0 && popd

      - checkout

      - run: 
          name: Import GPG Key
          command: echo -e "$GPG_KEY" | gpg --import --pinentry-mode loopback --batch --passphrase $GPG_PASSPHRASE
      - run: 
          name: Install tools
          command: toolbox -v sync
      - run: 
          Name: Goreleaser
          command: toolbox do -- goreleaser
          no_output_timeout: 30m

workflows:
  version: 2
  test-and-release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v[0-9]\.[0-9]\.[0-9]$/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]\.[0-9]\.[0-9]$/
            branches:
              ignore: /.*/
